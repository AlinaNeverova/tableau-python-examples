<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Advertising_Data (Advertising_Data)' inline='true' name='federated.0eeny930yay19d1gvas1e0neamtq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Advertising_Data' name='excel-direct.1vg9rya1v42kjr11e3eys0qpzezc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/alinaomelchenko/Downloads/Advertising_Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1vg9rya1v42kjr11e3eys0qpzezc' name='Advertising_Data' table='[Advertising_Data$]' type='table'>
          <columns gridOrigin='A1:H301:no:A1:H301:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='TV' ordinal='1' />
            <column datatype='real' name='Billboards' ordinal='2' />
            <column datatype='real' name='Google_Ads' ordinal='3' />
            <column datatype='real' name='Social_Media' ordinal='4' />
            <column datatype='real' name='Influencer_Marketing' ordinal='5' />
            <column datatype='real' name='Affiliate_Marketing' ordinal='6' />
            <column datatype='integer' name='Product_Sold' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H301:no:A1:H301:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TV]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>TV</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Billboards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Billboards]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Billboards</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Google_Ads</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Google_Ads]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Google_Ads</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_Media</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_Media]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Social_Media</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Influencer_Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Influencer_Marketing]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Influencer_Marketing</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affiliate_Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Affiliate_Marketing]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Affiliate_Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Product_Sold]</local-name>
            <parent-name>[Advertising_Data]</parent-name>
            <remote-alias>Product_Sold</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Affiliate_Marketing:qk]&quot;' value='Affiliate Marketing Cost' />
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Billboards:qk]&quot;' value='Billboards Cost' />
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Google_Ads:qk]&quot;' value='Google Ads Cost' />
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Influencer_Marketing:qk]&quot;' value='Influencer Marketing Cost' />
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]&quot;' value='Number of Sales' />
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Social_Media:qk]&quot;' value='Social Media Cost' />
          <alias key='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:TV:qk]&quot;' value='TV Ad Cost' />
        </aliases>
      </column>
      <column caption='Affiliate Marketing' datatype='real' name='[Affiliate_Marketing]' role='measure' type='quantitative' />
      <column datatype='real' name='[Billboards]' role='measure' type='quantitative' />
      <column caption='Correlation_Aff_add' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Calculation_717901936926076928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Affiliate_Marketing])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Correlation_Billboard' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy 2)_717901936937906188]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Billboards])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Correlation_Google' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy 3)_717901936937914381]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Google_Ads])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Correlation_Influencer' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy 4)_717901936937922574]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Influencer_Marketing])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Correlation_TV' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy) (copy)_717901936937828363]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([TV])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='p-value_Aff_add' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy)_717901936928067585]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Affiliate_Marketing])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normality_Aff_add' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy)_717901936928509954]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Affiliate_Marketing])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Correlation_Social' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy)_717901936937811978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Social_Media])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Google Ads' datatype='real' name='[Google_Ads]' role='measure' type='quantitative' />
      <column caption='Influencer Marketing' datatype='real' name='[Influencer_Marketing]' role='measure' type='quantitative' />
      <column caption='Normality_Google' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy 2) (copy 2)_717901936934694921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Google_Ads])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normality_Influencer' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy 2) (copy)_717901936934682632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Influencer_Marketing])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normality_Bilboards' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy 2)_717901936934653959]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Billboards])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normality_Sales' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy) (copy) (copy)_717901936934641670]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Product_Sold])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normality_TV' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy) (copy)_717901936934637573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([TV])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normality_Social' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy)_717901936934625284]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Social_Media])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
      <column caption='Social Media' datatype='real' name='[Social_Media]' role='measure' type='quantitative' />
      <column datatype='real' name='[TV]' role='measure' type='quantitative' />
      <column caption='Advertising_Data' datatype='table' name='[__tableau_internal_object_id__].[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]' role='measure' type='quantitative' />
      <column caption='p-value_Bilboard' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 2)_717901936938401808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Billboards])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='p-value_Google' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 3)_717901936938410001]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Google_Ads])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='p-value_Influencer' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 4)_717901936938422290]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Influencer_Marketing])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='p-value_Social' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 5)_717901936938430483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Social_Media])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='p-value_TV' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy)_717901936938393615]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([TV])&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Affiliate_Marketing]' derivation='Sum' name='[sum:Affiliate_Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Billboards]' derivation='Sum' name='[sum:Billboards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Google_Ads]' derivation='Sum' name='[sum:Google_Ads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Influencer_Marketing]' derivation='Sum' name='[sum:Influencer_Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social_Media]' derivation='Sum' name='[sum:Social_Media:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TV]' derivation='Sum' name='[sum:TV:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/alinaomelchenko/Desktop/Correlation Analysis using Python.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/11/2025 07:37:14 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Advertising_Data (Advertising_Data)' increment-value='%null%' refresh-type='create' rows-inserted='300' timestamp-start='2025-05-11 19:37:13.996' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>Advertising_Data</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TV</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TV</remote-alias>
              <ordinal>1</ordinal>
              <family>Advertising_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Billboards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Billboards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Billboards</remote-alias>
              <ordinal>2</ordinal>
              <family>Advertising_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Google_Ads</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Google_Ads]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Google_Ads</remote-alias>
              <ordinal>3</ordinal>
              <family>Advertising_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social_Media</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social_Media]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Social_Media</remote-alias>
              <ordinal>4</ordinal>
              <family>Advertising_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Influencer_Marketing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Influencer_Marketing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Influencer_Marketing</remote-alias>
              <ordinal>5</ordinal>
              <family>Advertising_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Affiliate_Marketing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Affiliate_Marketing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Affiliate_Marketing</remote-alias>
              <ordinal>6</ordinal>
              <family>Advertising_Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product_Sold</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Product_Sold]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product_Sold</remote-alias>
              <ordinal>7</ordinal>
              <family>Advertising_Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Advertising_Data' id='Advertising!Data_60CBE9121E1B4C0FB30EEC24DE45DF39'>
            <properties context=''>
              <relation connection='excel-direct.1vg9rya1v42kjr11e3eys0qpzezc' name='Advertising_Data' table='[Advertising_Data$]' type='table'>
                <columns gridOrigin='A1:H301:no:A1:H301:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='TV' ordinal='1' />
                  <column datatype='real' name='Billboards' ordinal='2' />
                  <column datatype='real' name='Google_Ads' ordinal='3' />
                  <column datatype='real' name='Social_Media' ordinal='4' />
                  <column datatype='real' name='Influencer_Marketing' ordinal='5' />
                  <column datatype='real' name='Affiliate_Marketing' ordinal='6' />
                  <column datatype='integer' name='Product_Sold' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Corr_Aff'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Number of Sales and Affiliate Ad Cost</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Correlation coeficient:    </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Calculation_717901936926076928:qk:4]>]]></run>
            <run fontsize='8'>Æ    </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Strong Positive</run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>Æ </run>
            <run>Æ&#10;</run>
            <run fontsize='8'>P-value:    </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy)_717901936928067585:qk:4]>]]></run>
            <run fontsize='8'>Æ    </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Statistically Significant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Affiliate Marketing' datatype='real' name='[Affiliate_Marketing]' role='measure' type='quantitative' />
            <column caption='Correlation_Aff_add' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Calculation_717901936926076928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Affiliate_Marketing])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='p-value_Aff_add' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy)_717901936928067585]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Affiliate_Marketing])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Affiliate_Marketing]' derivation='Sum' name='[sum:Affiliate_Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_717901936926076928]' derivation='User' name='[usr:Calculation_717901936926076928:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Correlation_Aff_add (copy)_717901936928067585]' derivation='User' name='[usr:Correlation_Aff_add (copy)_717901936928067585:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Affiliate_Marketing:qk]' scope='rows' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:qk]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Calculation_717901936926076928:qk:4]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy)_717901936928067585:qk:4]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Affiliate_Marketing:qk]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</cols>
      </table>
      <simple-id uuid='{CE278A56-6FB1-4906-A46E-94686D32A200}' />
    </worksheet>
    <worksheet name='Corr_Bill'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Number of Sales and Bilboards Ad Cost</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Correlation coeficient:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy 2)_717901936937906188:qk:3]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run fontsize='8'>Æ   </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Strong Positive</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>P-value:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 2)_717901936938401808:qk:2]>]]></run>
            <run fontsize='8'>Æ    </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Statistically Significant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column datatype='real' name='[Billboards]' role='measure' type='quantitative' />
            <column caption='Correlation_Billboard' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy 2)_717901936937906188]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Billboards])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column caption='p-value_Bilboard' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 2)_717901936938401808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Billboards])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Billboards]' derivation='Sum' name='[sum:Billboards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation_Aff_add (copy 2)_717901936937906188]' derivation='User' name='[usr:Correlation_Aff_add (copy 2)_717901936937906188:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[p-value_Aff_add (copy 2)_717901936938401808]' derivation='User' name='[usr:p-value_Aff_add (copy 2)_717901936938401808:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Billboards:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:qk]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy 2)_717901936937906188:qk:3]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 2)_717901936938401808:qk:2]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Billboards:qk]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</cols>
      </table>
      <simple-id uuid='{9108A460-152D-4A52-8346-9988D682FEDF}' />
    </worksheet>
    <worksheet name='Corr_Google'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Number of Sales and Google Ads Cost</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Correlation coeficient:   </run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy 3)_717901936937914381:qk:3]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ  </run>
            <run fontsize='8'>Æ  </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Weak Positive </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>Æ  </run>
            <run>Æ&#10;</run>
            <run fontsize='8'>P-value:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 3)_717901936938410001:qk:2]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run fontsize='8'>Æ   </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Statistically Significant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Correlation_Google' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy 3)_717901936937914381]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Google_Ads])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Google Ads' datatype='real' name='[Google_Ads]' role='measure' type='quantitative' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column caption='p-value_Google' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 3)_717901936938410001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Google_Ads])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Google_Ads]' derivation='Sum' name='[sum:Google_Ads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation_Aff_add (copy 3)_717901936937914381]' derivation='User' name='[usr:Correlation_Aff_add (copy 3)_717901936937914381:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[p-value_Aff_add (copy 3)_717901936938410001]' derivation='User' name='[usr:p-value_Aff_add (copy 3)_717901936938410001:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Google_Ads:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:qk]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy 3)_717901936937914381:qk:3]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 3)_717901936938410001:qk:2]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Google_Ads:qk]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</cols>
      </table>
      <simple-id uuid='{AEB2B9B9-3EF1-42CC-8A5F-58AD18E4E9B5}' />
    </worksheet>
    <worksheet name='Corr_Influencer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Number of Sales and Influencer Marketing Cost</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Correlation coeficient:   </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy 4)_717901936937922574:qk:3]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ  </run>
            <run fontsize='8'>Æ  </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Weak Positive</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>P-value:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 4)_717901936938422290:qk:2]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run fontsize='8'>Æ   </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Statistically Significant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Correlation_Influencer' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy 4)_717901936937922574]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Influencer_Marketing])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Influencer Marketing' datatype='real' name='[Influencer_Marketing]' role='measure' type='quantitative' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column caption='p-value_Influencer' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 4)_717901936938422290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Influencer_Marketing])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Influencer_Marketing]' derivation='Sum' name='[sum:Influencer_Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation_Aff_add (copy 4)_717901936937922574]' derivation='User' name='[usr:Correlation_Aff_add (copy 4)_717901936937922574:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[p-value_Aff_add (copy 4)_717901936938422290]' derivation='User' name='[usr:p-value_Aff_add (copy 4)_717901936938422290:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Influencer_Marketing:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:qk]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy 4)_717901936937922574:qk:3]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 4)_717901936938422290:qk:2]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Influencer_Marketing:qk]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</cols>
      </table>
      <simple-id uuid='{38782FBC-AC09-40AF-B4D5-5C019F8F0124}' />
    </worksheet>
    <worksheet name='Corr_Social'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Number of Sales and Social Media Cost</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Correlation coeficient:   </run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy)_717901936937811978:qk:3]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run fontsize='8'>Æ   </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Moderate Positive</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>P-value:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 5)_717901936938430483:qk:3]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run fontsize='8'>Æ   </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Statistically Significant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Correlation_Social' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy)_717901936937811978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Social_Media])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column caption='Social Media' datatype='real' name='[Social_Media]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column caption='p-value_Social' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy 5)_717901936938430483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([Social_Media])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social_Media]' derivation='Sum' name='[sum:Social_Media:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation_Aff_add (copy)_717901936937811978]' derivation='User' name='[usr:Correlation_Aff_add (copy)_717901936937811978:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[p-value_Aff_add (copy 5)_717901936938430483]' derivation='User' name='[usr:p-value_Aff_add (copy 5)_717901936938430483:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Social_Media:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:qk]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy)_717901936937811978:qk:3]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy 5)_717901936938430483:qk:3]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Social_Media:qk]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</cols>
      </table>
      <simple-id uuid='{5033FC83-6CA6-4457-8DD0-73180ACD0ECC}' />
    </worksheet>
    <worksheet name='Corr_TV'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Number of Sales and TV Ad Cost</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Correlation coeficient:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy) (copy)_717901936937828363:qk:3]>]]></run>
            <run fontcolor='#000000' fontsize='8'>Æ </run>
            <run fontsize='8'>Æ   </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Moderate Positive</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>P-value:    </run>
            <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy)_717901936938393615:qk:2]>]]></run>
            <run fontsize='8'>Æ    </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='8'>|</run>
            <run fontsize='8'>    Statistically Significant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Correlation_TV' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy) (copy)_717901936937828363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[0]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([TV])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column datatype='real' name='[TV]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column caption='p-value_TV' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[p-value_Aff_add (copy)_717901936938393615]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return scipy.stats.spearmanr(_arg1, _arg2)[1]&#10;&quot;,&#10;SUM([Product_Sold]), SUM([TV])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TV]' derivation='Sum' name='[sum:TV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation_Aff_add (copy) (copy)_717901936937828363]' derivation='User' name='[usr:Correlation_Aff_add (copy) (copy)_717901936937828363:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[p-value_Aff_add (copy)_717901936938393615]' derivation='User' name='[usr:p-value_Aff_add (copy)_717901936938393615:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eeny930yay19d1gvas1e0neamtq].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0eeny930yay19d1gvas1e0neamtq].[sum:TV:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:qk]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy) (copy)_717901936937828363:qk:3]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:p-value_Aff_add (copy)_717901936938393615:qk:2]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:TV:qk]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</cols>
      </table>
      <simple-id uuid='{E58C9BDB-356F-4F1C-A28A-79632BA0CD38}' />
    </worksheet>
    <worksheet name='Dataset'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Dataset to further analysis the correlation between spending on different marketing channels and the resulting number of sales. </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Affiliate Marketing' datatype='real' name='[Affiliate_Marketing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Billboards]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Google Ads' datatype='real' name='[Google_Ads]' role='measure' type='quantitative' />
            <column caption='Influencer Marketing' datatype='real' name='[Influencer_Marketing]' role='measure' type='quantitative' />
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column caption='Social Media' datatype='real' name='[Social_Media]' role='measure' type='quantitative' />
            <column datatype='real' name='[TV]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Affiliate_Marketing]' derivation='Sum' name='[sum:Affiliate_Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Billboards]' derivation='Sum' name='[sum:Billboards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Google_Ads]' derivation='Sum' name='[sum:Google_Ads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Influencer_Marketing]' derivation='Sum' name='[sum:Influencer_Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Sold]' derivation='Sum' name='[sum:Product_Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social_Media]' derivation='Sum' name='[sum:Social_Media:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TV]' derivation='Sum' name='[sum:TV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Affiliate_Marketing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Billboards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Google_Ads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Influencer_Marketing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Social_Media:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:TV:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Affiliate_Marketing:qk]&quot;</bucket>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Billboards:qk]&quot;</bucket>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Google_Ads:qk]&quot;</bucket>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Influencer_Marketing:qk]&quot;</bucket>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Social_Media:qk]&quot;</bucket>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:TV:qk]&quot;</bucket>
              <bucket>&quot;[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]' value='60' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
            <format attr='width' field='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:ok]' value='76' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eeny930yay19d1gvas1e0neamtq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:ok]</rows>
        <cols>[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C395CBE6-C318-4B98-8CCD-1D7F3C38E4EF}' />
    </worksheet>
    <worksheet name='Normality'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Book' fontsize='10'>Affiliate Ad Cost        </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[ <[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy)_717901936928509954:qk:1]>  ]]></run>
            <run fontname='Tableau Book' fontsize='10'>               Not normal</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book' fontsize='10'>Bilboards Cost             </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy 2)_717901936934653959:qk:1]> ]]></run>
            <run fontname='Tableau Book' fontsize='10'>                Not normal</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book' fontsize='10'>Google Ads Cost          </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy 2) (copy 2)_717901936934694921:qk:1]>]]></run>
            <run fontname='Tableau Book' fontsize='10'>                Not normal</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book' fontsize='10'>Influencer Ad Cost     </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy 2) (copy)_717901936934682632:qk:1]>]]></run>
            <run fontname='Tableau Book' fontsize='10'>                 Not normal</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book' fontsize='10'>Social Media Cost       </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy)_717901936934625284:qk:1]>]]></run>
            <run fontname='Tableau Book' fontsize='10'>                Not normal</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book' fontsize='10'>TV Ad Cost                      </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy) (copy)_717901936934637573:qk:1]>     ]]></run>
            <run fontname='Tableau Book' fontsize='10'>           Not normal</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book' fontsize='10'>Number of Sales          </run>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='10'><![CDATA[<[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy) (copy) (copy)_717901936934641670:qk:1]>]]></run>
            <run fontname='Tableau Book' fontsize='10'>                Normal</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Advertising_Data (Advertising_Data)' name='federated.0eeny930yay19d1gvas1e0neamtq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eeny930yay19d1gvas1e0neamtq'>
            <column caption='Affiliate Marketing' datatype='real' name='[Affiliate_Marketing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Billboards]' role='measure' type='quantitative' />
            <column caption='Normality_Aff_add' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Correlation_Aff_add (copy)_717901936928509954]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Affiliate_Marketing])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Google Ads' datatype='real' name='[Google_Ads]' role='measure' type='quantitative' />
            <column caption='Influencer Marketing' datatype='real' name='[Influencer_Marketing]' role='measure' type='quantitative' />
            <column caption='Normality_Google' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy 2) (copy 2)_717901936934694921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Google_Ads])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normality_Influencer' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy 2) (copy)_717901936934682632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Influencer_Marketing])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normality_Bilboards' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy 2)_717901936934653959]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Billboards])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normality_Sales' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy) (copy) (copy)_717901936934641670]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Product_Sold])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normality_TV' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy) (copy)_717901936934637573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([TV])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normality_Social' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Normality_Aff_add (copy)_717901936934625284]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import scipy.stats&#10;return [scipy.stats.anderson(_arg1, dist=&apos;norm&apos;).statistic]&#10;&quot;,&#10;SUM([Social_Media])&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product Sold' datatype='integer' name='[Product_Sold]' role='measure' type='quantitative' />
            <column caption='Social Media' datatype='real' name='[Social_Media]' role='measure' type='quantitative' />
            <column datatype='real' name='[TV]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Correlation_Aff_add (copy)_717901936928509954]' derivation='User' name='[usr:Correlation_Aff_add (copy)_717901936928509954:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Normality_Aff_add (copy 2) (copy 2)_717901936934694921]' derivation='User' name='[usr:Normality_Aff_add (copy 2) (copy 2)_717901936934694921:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Normality_Aff_add (copy 2) (copy)_717901936934682632]' derivation='User' name='[usr:Normality_Aff_add (copy 2) (copy)_717901936934682632:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Normality_Aff_add (copy 2)_717901936934653959]' derivation='User' name='[usr:Normality_Aff_add (copy 2)_717901936934653959:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Normality_Aff_add (copy) (copy) (copy)_717901936934641670]' derivation='User' name='[usr:Normality_Aff_add (copy) (copy) (copy)_717901936934641670:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Normality_Aff_add (copy) (copy)_717901936934637573]' derivation='User' name='[usr:Normality_Aff_add (copy) (copy)_717901936934637573:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Normality_Aff_add (copy)_717901936934625284]' derivation='User' name='[usr:Normality_Aff_add (copy)_717901936934625284:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='321' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Correlation_Aff_add (copy)_717901936928509954:qk:1]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy 2)_717901936934653959:qk:1]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy 2) (copy 2)_717901936934694921:qk:1]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy 2) (copy)_717901936934682632:qk:1]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy)_717901936934625284:qk:1]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy) (copy)_717901936934637573:qk:1]' />
              <lod column='[federated.0eeny930yay19d1gvas1e0neamtq].[usr:Normality_Aff_add (copy) (copy) (copy)_717901936934641670:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eeny930yay19d1gvas1e0neamtq].[none:Date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{CEBD2216-E1BC-49C5-A46F-A83FD74F6A65}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Correlation Analysis'>
      <style />
      <size maxheight='1060' maxwidth='1000' minheight='1060' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98490' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='755'>
            <zone fixed-size='52' forceUpdate='true' h='4906' id='6' is-fixed='true' type-v2='text' w='98400' x='800' y='755'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Correlation Analysis using Python in Tableau</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#000000' fontsize='10'>(Feel free to download this dashboard to use the formulas or template for your own analysis.)</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone fixed-size='280' h='26415' id='7' is-fixed='true' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98400' x='800' y='5661'>
              <zone fixed-size='492' h='26415' id='8' is-fixed='true' name='Dataset' w='49200' x='800' y='5660'>
                <layout-cache fixed-size-h='6112' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='26415' id='9' param='vert' type-v2='layout-flow' w='49200' x='50000' y='5660'>
                <zone forceUpdate='true' h='4151' id='11' type-v2='text' w='45000' x='52100' y='7640'>
                  <formatted-text>
                    <run fontcolor='#333333' fontsize='10'>Checking the normal data distribution before choosing the type of correlation test:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='14151' id='12' is-fixed='true' name='Normality' w='45000' x='52100' y='11791'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding-left' value='70' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4151' id='13' type-v2='text' w='45000' x='52100' y='25942'>
                  <formatted-text>
                    <run fontcolor='#333333' fontsize='10'>According to the results, we see that some of the data doesn&apos;t have a normal distribution, so we will use the nonparametric Spearman test. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='22' h='2830' id='14' is-fixed='true' type-v2='text' w='98400' x='800' y='32076'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#000000' fontname='Tableau Semibold' fontsize='12'>Correlation Analysis Results</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='311' h='29339' id='15' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='34906'>
              <zone h='29339' id='16' name='Corr_Aff' w='32800' x='800' y='34906'>
                <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='29339' id='17' name='Corr_Bill' w='32800' x='33600' y='34906'>
                <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='29339' id='18' name='Corr_TV' w='32800' x='66400' y='34906'>
                <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='311' h='29339' id='19' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='64245'>
              <zone h='29339' id='20' name='Corr_Social' w='32800' x='800' y='64245'>
                <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='29339' id='21' name='Corr_Google' w='32800' x='33600' y='64245'>
                <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='29339' id='22' name='Corr_Influencer' w='32800' x='66400' y='64245'>
                <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#b4b4b4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='60' h='5661' id='43' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='93584'>
              <zone fixed-size='292' h='5661' id='47' is-fixed='true' type-v2='empty' w='30000' x='800' y='93584'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='256' h='5661' id='44' is-fixed='true' type-v2='text' w='26400' x='30800' y='93584'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000'>Created by </run>
                  <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium'>Alina Nievierova</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='52' h='5661' id='45' is-fixed='true' is-scaled='1' param='/Users/alinaomelchenko/Downloads/linkedin-logo-linkedin-icon-transparent-free-png 1.png' type-v2='bitmap' url='https://www.linkedin.com/in/alina-nievierova/' w='6000' x='57200' y='93584'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='5' />
                </zone-style>
              </zone>
              <zone fixed-size='52' h='5661' id='46' is-fixed='true' is-scaled='1' param='/Users/alinaomelchenko/Downloads/tableau_logo-freelogovectors.net_ 1.png' type-v2='bitmap' url='https://public.tableau.com/app/profile/alina.nievierova3784/vizzes' w='6000' x='63200' y='93584'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='5' />
                </zone-style>
              </zone>
              <zone fixed-size='292' h='5661' id='48' is-fixed='true' type-v2='empty' w='30000' x='69200' y='93584'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#f5f5f5' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2500' minheight='2500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98490' id='55' param='vert' type-v2='layout-flow' w='98400' x='800' y='755'>
                <zone fixed-size='52' forceUpdate='true' h='4906' id='6' type-v2='text' w='98400' x='800' y='755'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Correlation Analysis using Python in Tableau</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='10'>(Feel free to download this dashboard to use the formulas or template for your own analysis.)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='26415' id='8' is-fixed='true' name='Dataset' w='49200' x='800' y='5660'>
                  <layout-cache fixed-size-h='6112' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4151' id='11' type-v2='text' w='45000' x='52100' y='7640'>
                  <formatted-text>
                    <run fontcolor='#333333' fontsize='10'>Checking the normal data distribution before choosing the type of correlation test:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='14151' id='12' is-fixed='true' name='Normality' w='45000' x='52100' y='11791'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4151' id='13' type-v2='text' w='45000' x='52100' y='25942'>
                  <formatted-text>
                    <run fontcolor='#333333' fontsize='10'>According to the results, we see that some of the data doesn&apos;t have a normal distribution, so we will use the nonparametric Spearman test. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='22' h='2830' id='14' type-v2='text' w='98400' x='800' y='32076'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Semibold' fontsize='12'>Correlation Analysis Results</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='29339' id='16' is-fixed='true' name='Corr_Aff' w='32800' x='800' y='34906'>
                  <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='29339' id='17' is-fixed='true' name='Corr_Bill' w='32800' x='33600' y='34906'>
                  <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='29339' id='18' is-fixed='true' name='Corr_TV' w='32800' x='66400' y='34906'>
                  <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='29339' id='20' is-fixed='true' name='Corr_Social' w='32800' x='800' y='64245'>
                  <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='29339' id='21' is-fixed='true' name='Corr_Google' w='32800' x='33600' y='64245'>
                  <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='29339' id='22' is-fixed='true' name='Corr_Influencer' w='32800' x='66400' y='64245'>
                  <layout-cache minheight='222' minwidth='136' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='5661' id='44' type-v2='text' w='26400' x='30800' y='93584'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000'>Created by </run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium'>Alina Nievierova</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='42' h='5661' id='45' is-fixed='true' is-scaled='1' param='/Users/alinaomelchenko/Downloads/linkedin-logo-linkedin-icon-transparent-free-png 1.png' type-v2='bitmap' url='https://www.linkedin.com/in/alina-nievierova/' w='6000' x='57200' y='93584'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='42' h='5661' id='46' is-fixed='true' is-scaled='1' param='/Users/alinaomelchenko/Downloads/tableau_logo-freelogovectors.net_ 1.png' type-v2='bitmap' url='https://public.tableau.com/app/profile/alina.nievierova3784/vizzes' w='6000' x='63200' y='93584'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BBF35284-A00B-47A0-8FDF-AA7FB42E52BC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Correlation Analysis'>
      <viewpoints>
        <viewpoint name='Corr_Aff'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr_Bill'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr_Google'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr_Influencer'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr_Social'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr_TV'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dataset'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Normality' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{277A0024-6F6A-4A01-A840-08146CB49688}' />
    </window>
    <window class='worksheet' hidden='true' name='Corr_Aff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2014D0C-F5E2-455C-A299-964E460D3577}' />
    </window>
    <window class='worksheet' hidden='true' name='Corr_Bill'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80B194B6-9326-491B-82F5-715815F2FD0F}' />
    </window>
    <window class='worksheet' hidden='true' name='Corr_Google'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[none:Calculation_717901936946233364:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AD7A820-0B1B-4469-8E42-B148E7F55939}' />
    </window>
    <window class='worksheet' hidden='true' name='Corr_Influencer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[none:Calculation_717901936946233364:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72FEE955-E33A-4CB0-BB85-24312F3CAD39}' />
    </window>
    <window class='worksheet' hidden='true' name='Corr_Social'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[none:Calculation_717901936946233364:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C79E467F-DC09-4792-A582-756CB490CE76}' />
    </window>
    <window class='worksheet' hidden='true' name='Corr_TV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[sum:Product_Sold:qk]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F639066E-3E5F-4BE5-8193-474D13C0FB3A}' />
    </window>
    <window class='worksheet' hidden='true' name='Dataset'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B9C7AFC-44FA-4E0D-BC3C-8675F7A672A5}' />
    </window>
    <window class='worksheet' hidden='true' name='Normality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[:Measure Names]</field>
            <field>[federated.0eeny930yay19d1gvas1e0neamtq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28C63BA1-235D-43F0-B3CF-FA4CDF7CF2AD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Correlation Analysis' width='384'>
      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
      Cv79739jaWlJp06dMDc3JywsjNatW7N06VKN9vT09GTHjh1i3/z6668xNTUlKioKb29vbt++
      zYYNG5g9ezbdunVDqVSKa+7z8/P54YcfKCoqYuLEiezbt4+bN28yevRoIiMjNepNoVBw8OBB
      MjMzGT9+POvXr2/Svi1bttCvXz8sLS0JCgrCxsaGmzdvkp+fz0cffcSmTZvE9po/fz5vvPEG
      rVq14qOPPkJXV7dFYyMlJQVTU1NiY2P56aefkMvlDer1448/1gizdu1asf+qRYSff/45ixcv
      JjMzk+vXr3PhwgWxLYqLi6UngL8T6enp4t1JSUkJq1atYs2aNZw/fx4dHR3at2/PkSNHOHHi
      BK1btyYnJ6eBd8aRI0cyY8YMcf33559/zr59+3BycsLW1pbffvuNc+fOYWFhwdWrV1GpVJiY
      mNC3b1+WL18urpt/7bXX0NXVFcVQ8fHxvP322wwZMoTq6mqNMB4eHpw9e5bU1FSUSiUnT56k
      d+/eyGQy3njjDaZMmcK9e/cAGsStrKzExsYGa2trLl++zIEDB/jvf/+r4YY3MDCQvn37ip1+
      0aJFrFixgsTERKqqqlAqlcjlcuRyuca6+dzcXN544w1R1GNjY4OpqSnXr19HW1ubmpoaURsw
      fPhw3nrrLTHupEmTWLFiBXFxcezbt4+PPvqIjz76iF9//ZXWrVujp6dHVlYW5eXlFBYW8sUX
      X5CZmUnv3r155ZVXsLOzA6B9+/Zi3ZaWltKtWzfeeOMNjSc7tSfJsrIyZDIZMpkMFxcXzMzM
      mm2rjh074urqyuuvv46jo2ODfgK1a9/79OnDokWLOHfuHB9++CFvvvkmBw4cID09nTfffJOe
      PXvi4eHBW2+9hbu7O2+++Sba2toolUrxaa+uPxsrKyv09PSoqanhzp07yOVyzMzM6Ny5M1Dr
      FnvixIm8/fbbJCYmUllZiYeHB0uXLm3Qnrt27dLom2ZmZrz++ut4eXnx+uuvi5OOh4cHb775
      poarC0NDQ0xMTLCxseHixYsEBgaycOFCvLy8GtSbWpvw/PPPk5mZ2ax948ePZ8eOHezZs4cR
      I0Zw8+ZN3nnnHaZPn05oaKhGewmCII4zXV3dFo8NdTn9/f3FJ9j69Vo/TN3+q2b8+PEEBQVx
      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
      Of1iILdtNyoqCltbWwoKCkQ9paqqKiQSSb+9bWtra9HpdNTX13Pw4EF0Oh35+flAK4Nz7969
      FBQU9CvGuXPnuHjxIitWrECpVGJvb4+VlRWNjY29XvZpj6amJtGxSo+2bapUKpydnZkwYQJ7
      9uzhm2++wd7enry8vC5lsI1oxbhx4wBEJ6/2//v5+WFjY8OMGTPYunUrLS0t2NrasmTJEg4c
      OEBSUhIODg5iAjcoKIglS5Zw9epVIiIimD59OiUlJYSHh9PU1CS2q8eIESMYNWoUPj4+zJgx
      A3d3d+RyObt27TJQGV2zZg0nT54UXbyGDRvGjh07WLBgASqViu+//x6pVIqHhwcTJ05k27Zt
      Xf4+LS0t2bdvH59++il//etfOXLkCJmZmXh6enL27FkiIyPZtGkTLS0tTJ8+Xdxvd3d3duzY
      QWNjo6h00BEGJAfg6enJ9u3buX37NhYWFiiVShobGzExMaGpqYnr16/j6+vLvn37sLe3Z+jQ
      oR1u4+rqSnh4uChI5u7uTnJyMgkJCTz77LP88Y9/5N1338Xe3h6FQsHcuXMZMmQIeXl5PdpP
      iURCYGAgdXV12NraUl1dTWlpKVKpFB8fH6RSKZmZmWRmZjJ//vw+n4+0tDRcXV0xMTGhtrYW
      tVotrv+1tLQwZcoUbt261S9paKVSSUVFBdXV1VRVVbFnzx6WL19OWVkZXl5erFmzhsbGRgoK
      Cvoln9C23enTp9PY2Eh1dTWDBg0iNTUVNzc3NBoN+fn5fT6ezMxMLCwsGDt2LGlpaaxfvx5o
      zZ+Ympri5+fXbxkN/RJcWFgYJSUlVFRUEBAQwO3bt6mvr0cul1NZWcmdO3ewsrLq1KqxM0RF
      RfHoo48CrTLjpqamtLS0iG16eXlx/vx5xowZg5mZGWvXrkUQBFGo0Iiu0dkAoJ/9+/n5Aa0P
      n22XPG1tbQ3uS/0Arf/7tknYpUuXiq+9vLwM4rdl0o4fPx5olUhpDwsLC1auXCm+nz59OtOn
      Txff613p9Pve3eqFl5cXf/7zn8X3V65cYfny5Uil0rvkVn71q1/1qm0YoByAubk55ubmnD17
      ljVr1nD9+nXy8/Opr6/H3t6enJwcpk2bRl1dHenp6axevZqkpKS7tnFzc6OhoYGsrCzUajVL
      lizh8OHDBAYGEhQURGVlJXl5eeTn5zN69GiOHj1KfX09YWFh4uyjqxwAtE7FZTIZDz30EJWV
      lQiCgIWFBTY2NkyYMIGMjAxmz55tYCLfHt2t0To5OXHr1i3GjBnD8OHDqaqqoqSkhEWLFmFq
      akp6ejpubm53PWW0R1dr2o2NjRQVFYkJRW9vb5RKJU1NTSLN3d7eHi8vry7X37tbn7e3txfb
      9fHxwc7ODi8vL5ydnbGxsSEzMxMbGxsmT57caYK2uxg2Njbk5uai1WqZN2+eOLvz8vLCzs6O
      oqIi6urqWLBgQZdJ4K7i6HQ6bG1tRYG6WbNmkZmZyfDhwxk+fDilpaVYW1sblNX1JoadnZ2Y
      zzl06JB4v+rbdHFxYdiwYWRnZ7Nw4UIcHBzEY2y/DGTMARjRGTw9PftdWtoWfZaCuF+U+N7i
      fpUCglHa4KcU437F6UmMpqamXs8g2qI/95dRCsKI3uCBKwO9X0Sw+4EHhdh0P2Lcrzg9jaHV
      avscQ6+MasR/oFAoyMnJwdfXFzs7u063UyqVNDc33zWrausIplKpqK6uxsPDA4CKigpMTEw6
      TcjriV4lJSWdVu0JgsCtW7eQy+UD5vrXtu20tDSam5tFpzzo2CmsbVl2TU0NCQkJTJ482UC+
      ui36NQD8FNnA+uSPEUYY8WBAq9WyZcsWUWnzscceA+4meMF/Buj2nXl8fLw4AOTm5vKPf/xD
      LC/+6quvGDVqFEuXLu2wTT3Rq6amptMB4LvvvsPd3R2dTsfQoUORyWT9IoC1xRdffEFeXh7l
      5eU89NBDovz6V199hUwm489//jP/8z//Q0pKCh9//DFff/01Dz30EMuXL2fZsmX85S9/ITo6
      usOlIyMTuB94EFinD0qM+xXHyAS+/9BXmTk5OREcHExNTQ3btm3DysqK8ePHM3jwYJHQNXfu
      XO7cuYMgCJw+fZrKykpWrVp1V5sTJkwgOTkZb29vsR9LSEggOTkZhULBr3/9a44cOSI6g0Fr
      ccfIkSPZvn07Op2OkSNHMmPGDNGiVV/y29zczOeffy7my2xtbUlOTsbW1pbAwEAuXryIRCLh
      ySef7NHxv/jii0ilUjZs2GDQibd3Clu2bJlISNQXavzmN78hLS2NgoICAyKZHj9LMTj9FF4Q
      BLFMU/++vLx8QJYRqqurxVpkpVJJSUkJ0PqEUlNTQ01NTb/j1NbWUlNTQ3Nzs2hrqa/51Wg0
      3Llzp0dOYD2JUVNTgyAI1NbWGpQttrS09LsEFFrPvT7/1NLScleddH/PVUtLi3gcepZ2WVmZ
      uO/6mH1d3lMoFNTU1Nz193oyUPttmpubqampoba2th9H9fOATCbjzTff5PLly2zZsoXz58+z
      atUq1q9fT2pqKjExMbz88susXr0anU5Hc3MzNjY2mJubY2lpya1bt+5qMygoiJSUFM6dO8fs
      2bOBVn9qV1dX5HK56EPd1hlMf22dnJywt7cnPT0daL132uZ8UlNTmTt3LmvWrBGr8HQ6HYGB
      gYwZM4bg4OAed/7QmlN66qmnsLa25vnnnxc/b+8U1pa34OLigp+fH08++SRnzpzpdElywHIA
      n3zyCaWlpfziF79ArVYTHR1Nc3MzH3zwAba2trS0tLBhwwYaGxt58cUXsbGxYfPmzSxZskSU
      N62pqeHTTz9FrVbz+OOP4+LiwtatW7GxseGDDz7gr3/9KzU1NXh7e7NixQreeecd3NzcePzx
      x3tMBtuxYwelpaW8/fbbxMfHo1QqSU1NZeXKlVy7dg2JREJqairzb51PAAAgAElEQVSvvvpq
      n9dhL168SHV1Nfn5+SxYsIBTp07h5eWFmZkZwcHBJCYmolKpKC0t5cUXX+xTDJVKxZYtW0RW
      4alTp3B1dcXKyooZM2awadMmJk6cyPHjx1m3bl2fYkArA7O5uZnTp0+zevVq4uPjsba2xs3N
      DS8vL/bv38+YMWP6VTZbW1vL7t27sbGxYdWqVWzdupWAgADCw8N5/fXXOXToEImJifzpT3/q
      cwyVSsXVq1cRBIHk5GRmzpxJeXk5eXl5vPLKK1y8eBGZTMbu3bt54403eu3c9cUXXzBu3DiG
      Dx8urgEfPXoUuVxOVlYWv/nNbwy2SUpKwtLSErlc3q9z93OAWq1GoVAQGhrKpk2bcHJyorCw
      ECsrKyQSiUjoassrioyM5IknnhArCttDb3KklzWB1pLRKVOmMGPGDKRSKRcuXAAMC2PS09Ox
      tbVlwoQJ7N+/H/iPY1lDQ4OoA5SRkUFAQAAajQZfX1/GjRvHP//5T/z9/XttC/rZZ58REBDA
      o48+SllZGdXV1VhaWpKRkWHgFGZpaSmWtisUClauXImFhQXr1q3r8Okf7hETePTo0Xz44Yd4
      enpSXFwM/DSYwACrVq0SySAhISG4urpiamqKhYUFCxcuZM6cOX3Sg2mL6dOns3jxYtGUui37
      uDPWaG9RUFCAo6Mjnp6euLm5UVtbi5WVFWPGjAEQ8yD9zYfMnj2b4OBgpkyZgoWFhehsZWVl
      hYeHx4DorrdnNesTVvr/n3jiCQOyTV9gbW3NggULMDEx4cknnyQ3N5dly5bx0EMPkZWVxbRp
      07Czs8PGxqbXvIn6+noEQcDFxcXA9akts7ygoMBgm6qqKqytrXt17/5cIZPJuHz5Mtu3b2fW
      rFlMnTqVvLw8wsPDCQ0NNSB02dnZ4e3tzbx58zhw4AAlJSV4eXkZnGdnZ2c8PDyYM2cOISEh
      WFhYMHLkSEJDQ4mOjubEiRNIpVKmT5/Otm3bxCfr4OBgRowYQV5eHrGxsQZtrl27loMHD4qu
      ZHpLyKVLl1JdXc2uXbvw8fHB1NQUf39/9uzZ0+Pj19/7+/fvJyUlhQ8//BC5XE5VVZX4ULRq
      1SqioqIwNTUlKyuLrKwsYmNj2bx5M5s3b+7UjXBAZgB1dXU4OjpiYmKCIAiYmpryxRdf4OTk
      JJIy9DXHet9Nf39/kemph6WlJceOHSMpKYlf//rXfPTRR1hbW+Pk5ERdXR1SqZQDBw6wfv16
      bGxssLW15cMPP2T+/Pmi3EJ3aK8KWFFRgampqUhwio6OZsWKFf0Sg6uqqiIiIoJ58+YxdOhQ
      IiIi2Lt3ryh4plAo0Gg0BqzR3kJfDZGZmUl0dDTPPvssdXV1bN26lddffx2dTifyK/qLY8eO
      sWLFCm7evImjoyOWlpYoFIp+s2f1aN9OU1OTqKLY0tIyYD7Azc3N5OfnM3fuXC5fvgy0PgkK
      goBWq6WqqgoTExPUanWvyFlWVlY8//zzFBcXs2/fPsLCwoD/qEtC673ddpsVK1ZQV1fHd999
      x0svvdSl/tDPHfpBuy2WL19u8L5tUlWfANYnSwGDJ+C2uUt9JZBe8+fpp58Wvxs/frxI+oL/
      kMfaLsO0jdn2YWjBggUG3w8bNkx8/dBDD931911h+fLl4vEKgoCdnR2enp48/fTTBvvbfqbf
      mQ1kWwzIAODn58fmzZuxsbHB09OTL7/8Uuy4KysrOXnyJI888gh//vOfKSgoEAlXaWlpyOVy
      /P39OXPmDOPGjROnbnl5eQQFBbF9+3aSk5P54IMPWLt2LS+88AJFRUXY2Nhgb2+Pm5tbj9eH
      NRoNR44cISUlBScnJyQSCUqlEqVSSUtLC99++y3Dhw8nNjaWJUuW9DnZt3PnTpydnUWRNJ1O
      h1qtFgepQ4cO9evpH1orGRISElCpVISEhHDixAnMzMxEA/WGhgby8vJ6Pd1sj+zsbDw9PUXN
      nKKiIszNzfH29hbFzwoKCvDy8upSdK4rFBcXc/nyZVJSUhg5ciTNzc3cvn2bhoYGpFKpeM0s
      LCwM2Jq9RVu2bkBAANu3b6e6uprXXnuNw4cPI5fLxaf53qC0tJSYmBjkcjmDBw8mJSUFFxcX
      3N3d2bNnD9XV1YwfP95gm7Nnz6LVasUHJiOM6AkG2hFswIhgpaWl3Lp1i6lTp5Kfny8mt4YN
      G0ZJSQkjR44kLy+P0tJSJk+ezJ07d0QZVW9vbyoqKnBzcxOfWB0cHPDx8SEuLg4PDw88PT1J
      Tk4GWp8IAgICSEpKQi6XExQUJGbHe1ul0dDQgIWFRa8Nu6HnVUAqlUoUHusNuiMd6YWv9B2I
      UqnEwsJCfKpVKpXd7mNvyVMajQadTtcrolNfCFqNjY1YWlr2ivXY2zhKpRJzc3OkUimCINDQ
      0ICVlVWXM5vOYrS0tKDRaDA3N+fo0aMsXrwYiURicBxtt9HH11+vtjASwYy4XzAygfsYA4xM
      4J9SjPsV537EMA4Ahqirq6O0tFR831b+XZ/70iftq6qq0Gq1BhUxWq2W3Nxc8Vh1Oh0ZGRnY
      2tr2+Fz9mOiI8KVHbW0tBQUFouZ/eXm5KAF/584dcdk5ODh44HkA94Pd2Vs0NjbeFzaoPta9
      RGNj4z0n2z0oMe5XnPsRQ6PRGGWi26C5uZna2lpOnDghmrU88sgjuLi4sGfPHgMRtMjISDQa
      jSgoCK0DQFJSkjgA6KuxiouLxQFgoEhb9wLtCV96gxqA//7v/yY1NZWrV6+i0+l4+eWXUSgU
      nDx5kjfeeIPg4GCkUqnBKklbPHBSECYmJjg4ONzTGMYZwE8vxv2Kcz9nAEa0wtnZWTRqmTx5
      Mj4+Ppw7d05MDOsrXFpaWsQl0aamJurr6/nuu+8MFFerqqpwdnYWFTrbk8oqKyspKSnB2dkZ
      b2/vXpO27gXaE770OHfuHN7e3mKlpb7q6PvvvwdaqzOXLVvGlClTOl3W7NcAYGREGmGEEfcb
      Li4uVFZWkpaWZqCom5SUhFarxczMjEuXLlFaWsq6deuQyWRERkYCrfm4tro4elKZi4sLX3/9
      tSgDPXr0aPz8/HpN2roXaE/4gtZZzfvvv88f//hHjh07Rnp6Ov/617/49NNPqa2tpby8nI0b
      N1JZWUlYWBjHjh27y38FBpAJ3NTURFFREdA6nSoqKrorn6BUKkXnemid6rYnaajVapE1C63J
      5bYM0aKiIrF6Qs/s7G2ly82bN0U2a1xcnKjTD63rbf1x6oLWc3Hq1CkuXboEtFLIo6KiRDZe
      UVERBw8eFEfuviI7O5uDBw+K7mVlZWUi6zE5OZmIiAiDtdO+Qt+uSqXi5MmTnDx5Eq1Wi0aj
      4fjx4/0+XwCxsbHExMRQWlpKXV0dkZGRYpFAY2MjkZGRpKWl9bl9QRCIi4sjMjJSLFDIzc0V
      X9+5c4eIiAiR9t9bdHZNr1+/LkpQx8XFERMTI/pXDMS99nOFg4MDsbGxBlaHSUlJzJ8/n4cf
      fpibN2+Krl1t+6HBgweTmpqKRqMRS9MLCwtpbGxEIpEwYcIEnnnmGdF8vb9VdAOB+Ph4fvWr
      XzFlyhTOnTtHeno6WVlZrFy5kszMTBQKBbm5uTz77LOkpqaiUCioqqqisLCQCRMmYG9v3+lx
      DIgfQEtLC2+++SZ5eXkUFhaSnZ1NUlIS27dvZ+rUqVhaWtLQ0MDbb7/N9evXRWP0t956CxcX
      F3x8fIDWH9Ff/vIXMjMzyc3Npby8nEOHDhEREcGcOXPYsGEDRUVFHD58mODgYN58800qKiqw
      t7cXR7fu/ABqamrYvn07gwYNIisrC0tLS8aOHSuSv77//ntKSkpEA4qO0J1ee1JSEn5+fqLH
      bV5eHpMmTSIqKorhw4ezf/9+nnrqqW4rg7pKaFdUVHDu3Dkef/xxcV92795NeXk5Y8eOFUsP
      9+zZ06kfaHcxoLXj1Lc7ZMgQXFxcsLKy4tKlS9y4cYMpU6YQHx8v6tv3JUZdXR2pqakiGWvn
      zp0sWbKE3bt3M2nSJLZv387jjz+OpaVll/X53fkBNDY2MnbsWPbu3Yu5uTnR0dE4OTnh4uJC
      eXm5WIYcFBTUaVVYRzHUanWH1/Ty5cucOHGCoKAgzM3NOXnyJLNmzcLe3h4TE5NO7zWjH0Dn
      0Iuxubi4oFQqGTVqlPidIAgEBASIS8AzZswgKiqK/Px8AgICcHFxQSqV4uvrS0REBMXFxcyb
      N08sQV6+fDl5eXmcPn2akSNH4uPjQ2NjI3FxcQQGBv4oxwutJjC7du3Czs6OdevW8fbbb7N4
      8WKRyGZnZ0doaCghISHi+9mzZ5OSksKRI0dYsWJFp5yAARkAcnNzqa+v57XXXmPHjh28+OKL
      aDQaioqKmDVrFmZmZly5cgUPDw9Wr17N9u3bWbRoEYMGDUImk4kDgLW1NfPnz6ehoYHa2loS
      ExP5wx/+QHNzM0qlkmeeeYZBgwaRkJCAp6cneXl5zJw5k/Hjx4trXN0NALt372bevHlotVpS
      UlJQKpVkZmYSEBDAtWvX8PT0pKamRmTUdoTufqAeHh5otVrOnDnD+PHjKSgoYNiwYSQkJGBr
      a0t6ejp5eXkMGjSoSzJYVx3axYsXqaioICMjA29vb3744QemT59OQUEBY8aMoa6ujvDwcPz9
      /buUp+2ucz5+/LjY7pQpU7h06RJnzpxhyZIloomPXC6nuLi40zjdxSgsLCQpKYmKigpGjBhB
      Tk4OEydOFE119u3bR319PWq1ulNKe3dxpFIpxcXFREREMGnSJIKDg8USTBcXF+RyOQcOHEAm
      k/V6wMzIyOjwmnp6eqJUKg3uh6qqKnx8fEhNTe30XjMOAB2jrRKnlZXVXbwTd3d38bWHh4dY
      Ih4YGGiQt7GxsSE4OJhRo0YhkUgYNWoUQUFBmJmZiUZN+j5p6NChP2rnDzB27FgWL17MjBkz
      kMlkuLu7GzDj9RVAbd9LJBKCg4NZuHBhl5VeA7IEpNVqMTU1RSKRiPXOlZWVSKVScYlHq9Vi
      YmKCXC6npaUFBweHu7LSEomEv//979y5c0cUdpLJZJiYmKDVajl9+jTbtm3jd7/7HSNGjGDl
      ypVkZWWxb9++Hu1nRkYG5eXl/PDDD1y6dAkrKyt++ctfMmHCBOLj4zl27Bg5OTmkpKRQWFjY
      5/NRWFjIzp07efHFF8V1xOvXr2NqaopcLmfmzJk888wznDt3rs8xTExMWLRoEU8//TSHDx/m
      4sWLXL16lZSUFGpqavD19eXJJ58UvXv7gqamprvanTVrFnPmzCE+Pp7Q0FDR4LozvfGeYNiw
      Ybz22mvMmzePyMhIcTlO/39gYCArVqzoUNSrNwgMDGTp0qUdLrvY2try5JNPotVqRRG/nqIn
      19TW1pbf/e53LFu2jIiIiAG714z4eWGgiWADUgXk4+PDpk2bxLra6OhoHB0dEQSBqqoqAyZw
      YWEh48eP75QJnJ6ezhNPPEFqaipjx47tkAl89epVbGxsKCoqorGx0aDmtyuMHDmSd999l8zM
      TOrr67G0tOSbb76hubmZ5cuX88c//hFAtFXsK8LDw3F2diYyMpLZs2dz8+ZNGhoamDhxIiNG
      jGDTpk0UFxf3eL87wqRJk/jyyy/x9PRk1KhRrF27Vtx3KysrduzYgZOTU69FzdrCzMxM9CNt
      amqisLCQjIwMtFot7u7u3LlzB6VSSXFxcb8YupmZmQas5uzsbA4cOIAgCKJoV2RkZK8Zum1R
      VVXFsWPHsLW1xcLCgtTUVLGztrOz49q1a8jlcpRKZae6KZ2h/TXVM4Hz8/O5evUq5eXlBAcH
      i8RFb29vUU6gv/eaEUb0B/eECVxeXk5GRgYeHh74+/uTkZHxk2UCq9VqJBJJr5it/WUC61mn
      3T01d1dy2NLSglqt7nA/9DLNesXEvsZoj/bnq66uDltb237HaM9qbn8d6+vrsba27lccrVYr
      DpDt0V8mcNtr2pYJ3BbtmcCdwUgEuxv5+fni8l91dXWPdbT0bl59xcWLF9HpdMycOROAvLw8
      GhsbGTly5F15orauYwMN/ZL45MmTxftCEATS09OprKxk8uTJmJubU1NTQ3x8PIGBgbi7u1Na
      WkpqaiohISEdnrMBqwJyc3Nj5syZyOVy3N3dmTNnjrhGpxda8vb2ZsqUKUgkEry8vJgwYQIT
      JkzAycmJkSNHYm9vL37m6+uLRCJh2rRposOO/ruxY8cik8kICQnplOHWU5ibm/fLv7UnsLCw
      MPjRSySSfi2Z6KFX5ezsu+46zL6g/fmys7MbkBgmJiYGa97tj8vGxqbfceRyeafnS39N+ipw
      1/aaLlmypMN9lclkRqvHPuKzzz4jLi4OQCzp7Aj651n9//Hx8XfNHLvzyNB/39LSQlpaGjNm
      zABaB4PExERqa2tJSUm56+/i4+N7HKM30Ol0LF++nGvXrhmIv+Xm5rJjxw4uXbpEWFgY9fX1
      PPHEE2RnZxMXF0d+fj4rVqwgOzubxMTEDts2MoH7ACMT+KcX437FMTKBfxwEBwcTHx/P5MmT
      gdaZjlKpJDg4mH379jF06FAuX75MfX09gwYNoq6ujqVLl1JRUcHOnTspKSnhv/7rv9i1a5f4
      sBESEkJkZCSWlpasXbuW5uZm/vnPf4pOXnK5nJycHC5dusT06dNF8chx48aJevxXr16lrKyM
      V155RdzXb7/9VowRHBxMVFSUaObSlweM7Oxs/P39efvtt1m6dCkNDQ1YW1vj5+fH2rVrOXv2
      LEOHDuXUqVOMGDECrVbLhAkTCA8PZ9KkSeh0uk5lx41M4D7AyAT+6cW4X3GMTOAfDwsWLCA6
      OhpA5KFA6xJrc3Mzjz32GPX19eh0OhwcHCgoKMDZ2ZlnnnmG8+fPc+vWLdLT05k5cybx8fGM
      GzcOJycn0TJS7+QVFBTE119/zTPPPENJSYnIGp42bRouLi589dVXTJw4UdT3b2lpEfkfWq3W
      IMb48ePF8tS+zi7bLvNaWlqiVquxtrYGWpe4EhMTcXV1RaFQYG1tzYgRI1i7di3Tp0/HwcEB
      Nzc3Xn31VXbv3n1X20YmsBFGGPF/Av7+/sTGxiKVSpFKpTQ1NdHQ0CBWi3WFnJwcAgICGDx4
      MPPmzWPcuHGo1Wqx3BPA0dGRmzdvik5e7XHnzh28vLxYs2YNu3fvJikpifXr1xMVFSVuI5PJ
      DGJYWVnx6quvsnfvXjw8PEQzqt7Az8+PK1eukJmZSUFBAU5OThw7dgxfX1+8vLx49913CQsL
      Y+vWrRw7dowRI0YglUqZPHky0dHRLF68uNNzNCA8AGitZigrKxNrkPXldG2NLpRKJdXV1eLo
      pdFo0Gg0BlUXarWaiooKcT21tLQUqVSKiYkJLS0tlJSUiPK6tbW1qNVqZDKZmJDpjgcAraOm
      VCqlsbGR06dPo1Ao8PDwoL6+ntjYWBobG0W1wY7Q0zptQRCIjY3l9u3b+Pr6otFoSE9P73H1
      T3cJ7djYWHJycrC0tMTa2pqysjJKSkpwcnIiJyeH8+fP4+Xl1WUlUHcxqqqqiI2NBVqvX3x8
      PLm5uQiCgI2NDSdPnkSlUnV5TD0hm8XHx5OSkiLme9oei06nIyUlpctr0pM46enpxMXFMXjw
      YFpaWjh+/DgymQxHR0dqamqIjo7G1ta2y/xMZzHi4uLIzMxEKpUaLN8oFAoyMzNxdXXl2rVr
      JCcnM2TIEDG+hYWFaEmoh5EHcDckEglubm4MGTIEnU5HUFAQsbGx3Llzh9GjR+Pu7o6dnR3m
      5ubY2NhgbW0t5lsuXLiAv78/w4cPx8LCgrNnz6LRaPD29jY4/w4ODty+fZtLly6xZMkSrK2t
      kUql4r1dX19PREQEWVlZLF++HGdnZ44ePYqFhQX+/v5YWlri5uZmEMPe3p7IyEjkcjlTp07t
      Ux7L1NQUPz8/vvvuO959912Ki4s5evQoM2bMYMeOHZw9e5Y333xT5EPt2bOHd999l+nTp1NU
      VER0dDR/+MMfOl5WFNqhsbHxrn+ZmZntNxPKysrE11qtVnj11VeFjz76SNi9e7cgCILw9ddf
      C6tWrRK3qa+vF15++WXh/fffF86cOSMkJycLK1euFGJjY8VtCgsLhXfeeUf48MMPhW+//VY4
      efKk8MEHHwgvv/yyoFQqhd/+9rfCpk2bhN/+9rdCRUWF8Nxzzwmff/65cOPGDbGNhoaGu/a1
      Laqrq4X/+Z//EeLj44WcnBxBoVAIe/fuFQoLC4Xz588LFRUVwldffSXU19d32kZDQ0O3cQRB
      EMLDw4Xc3FyhoqJCEARB2Llzp7B58+Zu/06Ptue4PWpra4U9e/YIFRUVglqtFnQ6nfDll18K
      O3fuFJqamoStW7cKNTU1wtatW/scQxAEITY2VqiurhY2bdokqFQqoaKiQoiNjRUuXLgg7Nu3
      TygtLRV2794tFBYW9jlGXl6ekJKSIuTn5wv79u0zOBZBEISDBw8Kn3zySZdtdBensbFR+PLL
      LwWFQiFs3bpV2L59u1BbWyv861//EhoaGoQvv/xSaGhoED7//HNBp9P1KoZOpxO++uoroaKi
      QmhsbDT47ptvvhG++eYb4fbt28KhQ4eE8vJy4bvvvhO+/fZboby8XNi0aZOg1WoN/qan91dH
      yMzM7PA33NPftRE/fSQmJgoqlWpA2hqQKqDbt28zevRo3n77bRISEigpKaGurs5gupOUlMSC
      BQv43e9+R0xMDF5eXnf5yQ4ePJiPPvqI4OBgNBoNZ86c4fe//z1z5swhJSWFjRs3smjRInQ6
      HQUFBbi6uhIUFNQrJ6pDhw6xbNkyALy8vIiMjKS0tBRXV1dmzJhBU1MTSqWyV5aAnSE3N5cr
      V65w9uxZBEHg6aefHrD8REVFBaWlpZw+fRqdTsfx48dZuHAhEokEnU6HRqOhpaWFhoaGfsWZ
      PXs2ZWVlYiWTXkJj2rRpaLVaVCoV3t7e3Lx5s88xhg4dyujRozl9+jTBwcEGxwKwbNky0bqv
      r7CwsKCuro5vv/0WPz8/sUzWzc2N/Px88VjMzMxEfaCeor6+nrKyMk6ePCnq/kArhX/cuHGY
      mZkxePBg0tPT2blzJ4GBgchkMpydnRkxYoSoS2WEET3BuHHjBqya7J4wgf/xj38wZMgQSktL
      uX37trjNT40JLJfLWbZsGS4uLhQUFHD9+nWio6N5+eWXB8Tv1sXFhbCwMBwdHUUBsIFCW/bs
      vn37DBi7KpWKhQsXkpiY2GtSU3ucP3+eGzdu8MILLwCtpK0RI0YgkUgGjAnc3NzM559/zqJF
      i/Dy8rqLfTwQKC8vZ9iwYaxfv57bt28TFhZGWloa5eXl2NjYEBYWRmJiIgqFoteDf3uWrx5t
      2b5nzpzh4YcfZv369aSlpYlrskql8p6XIRthRGe4J0zguXPn0tTUhKmpKRYWFuzatesnyQQ+
      deoUSqWSyspKLCws+P777xk+fDgHDhzolyewHr6+vnz//fdUVlYSEhLCwYMHRT/iRx55pF9t
      t2fPPvfcc8B/DNXj4uJQKBRdahr1BMeOHRNL7Z566inOnj0rso4HigkcFxeHTqfj3LlzBAQE
      GLCPHRwcBsQT2MrKitzcXKKiorCwsCA7O5vm5mZaWloYMmQIV65coampicGDB/e6Qy4uLhb9
      fr29vUUmcFtm+dixYwkPD6e4uBhHR0fMzMxEv+D2OQAjjLhfuCdMYP1T5+3bt/Hx8flJM4Hv
      tSewUqkUNYB6i956ArdFc3MzWq2226fZ/pY1DhQTeCDQXRydTodarcbS0hJBEFAoFOK+63Q6
      Ghoauk2g9tYTuP02zc3NYmFEZ77HRiawEfcLRk/gPsYAIw/gpxTjfsUxegIb8SDByATuA4xM
      4J9ejPsVx8gENuJBgpEJ3AcYZwA/vRj3K46RCWzEgwQjE9gII4ww4meKe+IJrNFoRL/etqp4
      PwVP4PT0dA4fPoxCoRD34erVq0BrPffx48fFZHNfUVdXR0xMDDExMTQ1NZGUlERMTAwZGRlA
      63noT928Hm09gfPy8oiJiREVE/XWmXfu3OlXjKysLCIiIrh9+7bIbNbHgFb9lIiICFQq1YAd
      i0ajISoqisuXLwMD4wnc0NAgXpOEhATA0A/66tWr4vcd5cG6w+XLlzl9+rSB8qQgCJw+fZrT
      p08Dhr7BNTU1oi2hEUb8WBiQAaClpYW33nqLnTt3smfPHmJjY/n444/57rvvqK+vB1p/gG+9
      9RabN2/m7NmzpKSksHr1aoPOpKioiA0bNvDtt9+yY8cOTp06xb/+9S/eeustVCoV77//PocO
      HeIPf/gDVVVVvPHGG3z33XdkZ2f3aD+VSiUXL15k9uzZInfg0KFDooxrSkoKEydOJCEhoV8E
      qoSEBDw8PAgODsbExITk5GSCg4Px9PREo9Gwf/9+sXPrKyoqKrh8+TKLFi1CLpdz4cIFgoOD
      ReltvSDV0aNH+xVHp9OxYMECjhw5wqlTpxgyZAhqtZrExERu3rxJUVER8+bNG9Bj0fsYDxs2
      DIBdu3YxZ84cA8u/3sLCwoLg4GD8/f1JTk7m7NmzmJqaMm3aNKBVZyY4OJgbN2702kQnNTWV
      5uZmBg8ezIkTJ8TPDx06hK+vL0FBQajVarE6yNLSkgMHDjB//nzR+MYII34M3BMmcEFBAV5e
      XsyaNUuscf4pMIHbs0Gzs7NxdHQ0MJEeCCawQqEgKSmJa9euIZVKKSws5MSJEygUCkxMTHju
      uef6zeRLSkpCqVSyd+9elEoljY2NnDx5UiSczZ8/n1u3buHs7NyvOHZ2duzYsUP0tVWr1Xh7
      e5Oenk58fLzoPazVagfsWHJzc4mNjRW13LOzszl69Cg3btzocwyZTMagQYO4fPkyS5cu5ebN
      m9y6dYuoqCh0Oh12dnbodDqGDBnS6wGgpaWFpqYm7O3tDewd2zLBs7Ozqa+vZ+/evVRVVfWL
      eWyEEQOFe8IEfuyxx5g6dSq7du0SPWl/Ckzg9mzQ8PBw0UEjXXgAACAASURBVNwhKytrwJjA
      S5cuZeXKlcjlcrKysnj//fcJCwvjyJEjfW6zPdp6AkdHR7N+/XpWrlwpzqgOHz5MQ0MDoaGh
      /Yrj5uZGaGgohYWFPPLII9TV1ZGTk4O1tTWmpqYsW7aMpUuXijK9A3EsPj4+hIWFUV1dTVNT
      04B5AuvVI52cnO7ygwaIiori0Ucf7XW748aNw8HBgaysLANORlsmeGFhoYFvcH+Yx/cbxcXF
      AzJI6dtpu8Q7kBiIZdWOoCcN/pQwUMc6IAOAj48PCQkJHDhwAE9PT+Li4igrKxNJL7t27SIw
      MJDo6Gi2bdtmwAROTU2luLiYXbt2cfPmTdLT03F3dzdgAsfExDBq1Ci2bNnClClTuHr1Kjdu
      3CAnJ6dXdf/t2aDvvPMOoaGhBAUFMWLECCIiIrCysuLAgQP9qsQ4c+YM4eHhpKamYm1tzbZt
      2zh48CCurq7U1dWJjOALFy70OcakSZM4cOAAERER+Pr6smfPHg4dOiR+f/r0aSoqKvq9BPT9
      99+LTN2qqiqqq6tJT09n9uzZPPzww2zdupWIiIh+WeG1PxYnJyfCw8OpqqrCzMxsQDyBoZXV
      vGjRIgBCQkL45ptvOHv2LH5+ftTU1GBpadmnmZlSqaSgoICMjAxmz55NSkoKJSUlIhP8+vXr
      zJw5k8uXLxMREYGrqytZWVl9Zh7fb0RGRhpIXHSFrpywbt++TWVlpYG8hyAIXV7XAwcOdNl+
      2+976/7VXWw9UlNTaWpq4vTp0/2SJumpE1ln77s7Vj3S0tLEfGN3sQaMCFZWVkZRURFjx45F
      pVKRlZWFs7MzXl5eIhO4oKCAmpoaxo4d22MmcEpKCoMGDWLw4MF3MYGvX7+OXC5n9OjRPWYC
      t2WD9hU9KQNVq9WYmpoilUrR6XQ0NTUZSGP3BL31BFYqlVhYWPRKcra7GML/97rV20sqFAqs
      rKwM5Le1Wm2Xx9aT0sn2x9LQ0IClpaU4ExsIT+D26IsfdGcxGhoaMDMzw8TEhPj4eEJCQkQH
      KT0TXGjjG9wV8/inRARTKBQcO3aMuro61q1bJyaybW1tWb58Od988w12dnbMnz+fffv2YWVl
      xfjx49HpdCQnJ+Pg4ICvry8JCQmUl5ezYsUKEhIS+OUvf8nHH3+Mm5sbxcXF/Pa3v2Xr1q2Y
      m5tTVVXF66+/TkNDA++//z6TJ09mxowZREZGYm1tjZWVFaGhoQbfz5w5k7///e8EBATQ2NjI
      r371K/71r39hbW1NUFAQISEhqFQqNm3ahKmpKY8++iinT5+mqamJZ599lkOHDol9iVqtZtiw
      YVhaWhIXF4dSqWTevHl88sknDB06lJkzZ3LixAns7e2ZNGmSgefw8ePHmTBhAnFxcWJ7xcXF
      lJWVoVKp0Gg0rF69GoCvv/5a3EYqlZKcnIxCoeDXv/41u3fvFl3FQkNDKSsr46OPPmLy5Mks
      WLCA//3f/xWPddWqVRw6dIiGhgbmzp3LmTNnUKlUzJkzh3HjxpGdnW3gSrZlyxbxPA5YFZCr
      qyvjx49HLpdjY2PDhAkT8PLyAv7jCezl5SXKNvTUE1ifPO3IEzgoKIiAgIBedXhSqfS+TLnN
      zc3Fzksqlfa68+8J2nsCdyQr0F/ovW717dra2hrIZpiYmAzIsbU/Fr0Wux4D4QncHgPpB21t
      bS3mDiZOnCjuq6WlpSgD0tY3WCqV9li3/8fEuXPnkMlkKJVKMjMziYmJ4eWXX2b16tXiUtbz
      zz9PYmIiq1atYv369WJSfNiwYTz11FOkpKSwfv165syZAyBW/g0ePJjnnnsODw8P6urqcHBw
      4JlnnhFzcvrOOywsDIlEgq+vL8899xx1dXV3fe/h4cGYMWNYvXo1NjY2pKamIpPJcHV15dKl
      S8B/fIJff/11zp07h4eHB05OTly+fBmZTIaZmRl+fn40Nzej0+kQBEFUd5VIJEyePJmlS5fi
      7++PVCrFxsZG7OP0GDdunDhoVFdXc/XqVYKCgkhKSsLOzo6bN2+KT99tY54/fx5XV1fkcjkp
      KSmkp6dja2srVr65uroSHBxMWFgYDg4OBsdqbm6OlZUVjo6OpKWlMWXKFObPn8+4ceOA1ntN
      +P+uZPqZqf489osHcD/Ynb2FRqMxMoF/hjHuV5yfGxP4zp07LFq0iODgYH744QecnJwoLi7G
      2dkZZ2dn0aHKzs6OwsJCrKysxMFP77al1Wppbm7usrzWwsKCgoICysvLxZUBaO14m5qasLGx
      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
      3m+nd8LYeqQKwP1uuEUE+bD35GWMJguuKvsZgMVmw9dTjQwc9wAMJov9uqjO3hGXt9aNt5+b
      S3XjLT77Jh/b7evvZqsNrVrF80vj2XvyClPDJnDm0nU6dUbyrzWhkMn44tsrLJsdQafOxNEL
      5chlMrr0JjzUKlxcFEQE+fLZNxc5X1yPl8aV5lvdTIucaG+b1eYoQHfy0rj22UFYbDb8PMR9
      gPHITaVkXvykQU+fmhRJTkk97/7lOAE+Gi5VNLPpqXi2HshB7aqkS2+ivL4Ni8XG4umhpMwM
      p6apnU8O5WG22jhy3n4fKSLQh4qGNlQu9kdKVz4RxXdXapEkid+/uoTgCR78aedpzl6p480P
      D2MwWTCZrWxImcq3F6scYwV0GcwsmRlOdLAvn3x9EYVcxt5vL7N52bQ+R/WtnfbuKHpGObvz
      rEIYfx6pAtBzw63nMpDFaqOivs3x97DHvFmUGMpbHx0hNnQCFfWtvLE+CR8PNX/ceZogf0/y
      rzWQWVCD3mhGhv1pii69CU93V8rr/jkvPy93x7z/+k0+i6eHcbXW/kWw9m4jVqsN/e1LO1+d
      Knbsxm2S/ev5b2+Yy/HcSv7PV+dZMSeK//HSIn639Rjuri78YEEs4YHefLDnLJUNt9h2KI+1
      86fQ1NbNwTNlpM2PYV9mca8dxBvrk0S/PuOMJEkcOXeNw7dv7K+cE8WKOVH37bPJRamw32S9
      fVb48orpIIOtB3JYkDCZs1dqudmuQ+Wi4Myl6yycNpnFiaHsPnGJqaETKL59JlrTbH+yTK1S
      2gclMlv48ZqZvL/7O/Z8e5nmtm6a27qRy2U03LQ/FiqXyXjro38wP2ESJdUtBPho+Nm62Xz2
      9UWab3XjorR3l55b2kB9SxcBPppe95l8PdRYbDbH0I53n1UI48sj1RXE5duXZD4+mEtbl4Gc
      kno69SYWTJvkGI0oIWIi8REBqJQKVs+NJi7M3tVzeKA3f9p1mrob9p49f/fD+RRVNqMzmLFJ
      EtlF17la2+rowvn9X6RyKr8ak9mKv5c7xdUttHcbWTs/hqKKZjp1JlwUCscN4h5eGleaWrtJ
      S57CwdOl3OzQ8ftXl2C0WMkqqGHt/CkUVjQxOyYIndGCQi5Ho3ZhV8YlSmpauNmhR2cwEz3J
      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
    </thumbnail>
  </thumbnails>
</workbook>
